[analyze_suite_test_insert_line]
system="""\
"""

user="""\
## Overview
You are a code assistant that accepts a {{ language }} test file as input.
Your goal is to analyze this file, and provide several feedbacks: the programming language of the test file, the testing framework needed to run the tests in the test file, the number of tests in the test file, and the line number in the test file, after which the new tests should be inserted, so they will be a part of the existing test suite.


Here is the file that contains the existing tests, called `{{ test_file_name }}`.
=========
{{ test_file_numbered|trim }}
=========

If {{ language }} is Kotlin, the test file will be a Junit test file, and the tests will be written in the `@Test` annotation.
Ensure that the line number is correct, so the new tests will be inserted in the correct place in the test file. By "correct place", we mean that the new tests will be inserted after the last test in the test file,
but before the closing curly brace of the test class. ENSURE THE RELEVANT LINE NUMBER TO INSERT TESTS AFTER IS IN THE SAME CLASS THAT ALL OF THE OTHER FILES ARE IN.
DO NOT MAKE THE LINE NUMBER THE SAME AS THE ENDING CURLY BRACE OF THE CLASS. MAKE IT IN THE CLASS... PLEASE. MAKE IT THE LAST CURLY BRACE OF THE LAST TEST INSIDE OF THE TEST CLASS, BUT NOT THE CURLY BRACE OF THE CLASS ITSELF


Example output:
```yaml
language: {{ language }}
testing_framework: ...
number_of_tests: ...
relevant_line_number_to_insert_tests_after: ...
relevant_line_number_to_insert_imports_after: ...
```

{%- if additional_instructions_text|trim  %}

{{ additional_instructions_text|trim }}
{% endif %}

The Response should be only a valid YAML object, without any introduction text or follow-up text.

Answer:
```yaml
"""
